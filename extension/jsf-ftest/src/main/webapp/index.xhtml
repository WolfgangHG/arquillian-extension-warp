<!--

    JBoss, Home of Professional Open Source
    Copyright 2012, Red Hat Middleware LLC, and individual contributors
    by the @authors tag. See the copyright.txt in the distribution for a
    full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="jakarta.faces.facelets"
      xmlns:h="jakarta.faces.html"
      xmlns:f="jakarta.faces.core">

<body>
<ui:composition template="/templates/template.xhtml">

    <ui:define name="title">Hello world JSF</ui:define>

    <ui:define name="body">
        <fieldset style="width:500px">
            <legend>Helloworld using JSF</legend>
            <p>
                This example demonstrates adding ajax processing and updating to a standard JSF component.
            </p>
            <p>
                To see this example in action, begin typing in the input box, and watch as your text is echoed with
                html generated from the application server using an ajax call.
            </p>
            <h:form id="helloWorldJsf">
                <h:outputLabel value="Name:" for="nameInput"/>
                <h:inputText id="nameInput" value="#{cdiBean.name}">
                    <f:ajax event="change" render="output"/>
                </h:inputText>
                <h:panelGroup id="output">
                    <h:outputText value="Hello #{cdiBean.name}!"
                                  rendered="#{not empty cdiBean.name}"/>
                </h:panelGroup>
            </h:form>
        </fieldset>
    </ui:define>
</ui:composition>
</body>
</html>
